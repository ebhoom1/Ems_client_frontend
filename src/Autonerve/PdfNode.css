.pdf-node {
    padding: 10px;
    border: 1px solid #ccc;
    border-radius: 5px;
    background: white;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    text-align: center;
 max-width: 100%;
}

.pdf-node-content h4 {
    margin: 0 0 10px 0;
    font-size: 14px;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}
.pdf-node-content {
  width: 100%;
  height: 100%;
  box-sizing: border-box;
  padding: 6px;
  background: #fff;
  border-radius: 6px;
}

.pdf-viewer-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 5px;
    width: 100%;
  overflow: hidden;
}

.pdf-viewer-container canvas {
    border: 1px solid #eee;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);
}

.pdf-controls button {
    background-color: #f0f0f0;
    border: 1px solid #ccc;
    border-radius: 3px;
    padding: 5px 10px;
    cursor: pointer;
    font-size: 12px;
    margin: 0 2px;
}

.pdf-controls button:hover {
    background-color: #e0e0e0;
}



.pdf-scroll {
  overflow: auto;      /* no forced scaling */
  width: max-content;  /* keep intrinsic width, don’t shrink */
  max-width: 100%;
}

/* When using SVG renderMode, ensure it isn’t being CSS-scaled by global rules */
.react-pdf__Page {
  display: inline-block;
}

.pdf-node { max-width: 100%; }
.pdf-node-content {
  width: 100%;
  height: 100%;
  padding: 6px;
  box-sizing: border-box;
  background: #fff;
  border-radius: 6px;
  overflow: auto; /* scroll if page is larger than the node */
}

/* Fixed-size wrapper after measurement prevents ReactFlow relayout loops */
.pdf-wrapper {
  max-width: 100%;
  overflow: auto;
}

/* Show the high-DPI canvas at the natural size (sharp) */
.pdf-page .react-pdf__Page__canvas {
  width: 100% !important;  /* DOM width = wrapper width (natural) */
  height: auto !important;
  image-rendering: auto;
}

/* The measuring page stays offscreen, avoids visible flicker */
.pdf-page--measure {
  visibility: hidden;
  position: absolute;
  left: -99999px;
  top: 0;
}

/* Safety: don't let global CSS shrink the page unexpectedly */
.react-pdf__Page { display: inline-block; }
